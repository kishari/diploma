<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>7</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>21</x><y>14</y><w>210</w><h>112</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
CompleteMSRPMessage
--
-content: byte[]
-messageId: String
--
+getContent(): byte[]
+setContent(content: byte[]): void
+getMessageId(): String
+setMessageId(messageId: String): void</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>364</x><y>0</y><w>364</w><h>203</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Connections
--
-msrpStack: MSRPStack
-receiverConnection: ReceiverConnection
-senderConnections: Map&lt;String, SenderConnection&gt;
--
+Connections(msrpStack: MSRPStack)
#createReceiverConnection(host: InetAddress): void
#createSenderConnection(remoteHost: InetAddress , 
                                           remotePort: int, 
                                           remoteSipUri: String,
                                           msrpStack: MSRPStack): SenderConnection
#getSenderConnection(remoteSipUri: String): SenderConnection
#getReceiverConnection(): ReceiverConnection
#isReceiverConnection(): boolean
#isRunningReceiverConnection(): boolean
+update(o: Observable, obj: Object): void

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>7</x><y>140</y><w>322</w><h>147</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
IncomingMessageProcessor
--
-incomingMessageQueue: BlockingQueue&lt;Message&gt;
-running: boolean
--
+IncomingMessageProcessor(
               incomingMessageQueue: BlockingQueue&lt;Message&gt;,
               transactionManager: TransactionManager)
+run(): void 
#start(): void
#stop(): void
-processIncomingMessage(chunk: Message): void
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>357</x><y>224</y><w>322</w><h>266</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
MSRPEvent
--
+MSRPEventType: enum
-eventType: MSRPEventType
-remoteSipUri: String
-messageId: String
-completeMessage: CompleteMSRPMessage
--
+MSRPEvent(eventType: MSRPEventType)
+MSRPEvent(eventType: MSRPEventType, 
                      remoteSipUri: String)
+MSRPEvent(eventType: MSRPEventType, 
                      remoteSipUri: String, 
                      completeMessage: CompleteMSRPMessage)
#getEventType(): MSRPEventType
#setEventType(eventType: MSRPEventType): void
#getRemoteSipUri(): String
#setRemoteSipUri(remoteSipUri: String): void
#getMessageId(): String
#setgetMessageId(messageId: String): void
#getCompleteMessage(): CompleteMSRPMessage
#setCompleteMessage(message: CompleteMSRPMessage): void</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>749</x><y>35</y><w>238</w><h>42</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
MSRPListener
--
+fireMsrpEvent(event: MSRPEvent): void
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>0</x><y>308</y><w>280</w><h>273</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
MSRPStack
--
-connections: Connections
-activeSessions: Map&lt;String, Session&gt; 
-msrpListeners: List&lt;MSRPListener&gt;
--
+sendMessage(fullMessage: CompleteMSRPMessage,
                         remoteSipUri: String): void
+getReceiverConnectionHostAddress(): InetAddress
+getReceiverConnectionPort(): int
+startReceiverConnection(): void
+createMSRPSession(localSDP: SessionDescription, 
                                   remoteSDP: SessionDescription,
                                   remoteSipUri: String): void
+disposeResources(): void
+addMSRPListener(listener: MSRPListener): void
+removeMSRPListener(listener: MSRPListener): void
+update(o: Observable, obj: Object): void
#findSession(sessionId: String): Session
#stopSession(remoteSipUri: String): void
#getConnections(): Connections
#notifyListeners(event: MSRPEvent): void
-createReceiverConnection(host: InetAddress): void
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>693</x><y>224</y><w>357</w><h>203</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
MSRPUtil
--
-methodPattern: Pattern
-toPathPattern: Pattern
-fromPathPattern: Pattern
-messageIdPattern: Pattern
-byteRangePattern: Pattern
-contentPattern: Pattern
-endLinePattern: Pattern
--
+createRequest(content: byte[], localURI: URI, remoteURI: URI,
                           transactionId: String, messageId: String,
                           offset: int, chunkSize: int, completeMessageSize: int,
                           endToken: char): Request
+createMessageFromString(message: String): Message
+generateRandomString(length: int): String
+createMessageContentFromChunks(chunks: List&lt;Request&gt;): byte[]
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>469</x><y>798</y><w>259</w><h>252</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Message
--
+MethodType: enum
-method: MethodType
-transactionId: String
-fromPath: URI
-toPath: URI
-endToken: char
--
+createToPath(uri: String): void
+createFromPath(uri: String): void
+getMethod(): MethodType
+setMethod(method: MethodType): void
+getTransactionId(): String
+setTransactionId(transactionId: String): void
+getFromPath(): URI
+setFromPath(fromPath: URI): void
+getToPath(): URI
+setToPath(toPath: URI): void
+getEndToken(): char
+setEndToken(endToken: char): void</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>21</x><y>595</y><w>371</w><h>182</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
OutgoingMessageProcessor
--
-outgoingMessageQueue: BlockingQueue&lt;CompleteMSRPMessage&gt;
-running: boolean
-transactionManager: TransactionManager
--
+OutgoingMessageProcessor(
        outgoingMessageQueue: BlockingQueue&lt;CompleteMSRPMessage&gt;,
         transactionManager: TransactionManager)
+run(): void 
#start(): void
#stop(): void
-processOutgoingMessage(fullMessage: CompleteMSRPMessage): void
-splitMessageToChunks(message: CompleteMSRPMessage, 
                                      chunkSize: int): Map&lt;String, Object&gt;

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>322</x><y>504</y><w>371</w><h>287</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
ReceiverConnection
--
-running: boolean
-msrpStack: MSRPStack
-saveBuffers: Map&lt;SocketChannel, String&gt;
-hostAddress: InetAddress
-port: int
-serverSocketChannel: ServerSocketChannel
-selector: Selector
-preParser: Parser
-router: Router
-buffer: ByteBuffer
--
+ReceiverConnection(hostAddress: InetAddress, msrpStack: MSRPStack)
+run(): void
#start(): void
#stop(): void
#isRunning(): boolean
#getHostAddress(): InetAddress
#getPort(): int
-getFreePort(): int
-accept(key: SelectionKey): void
-read(key: SelectionKey): void
-initSelector(): Selector
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>742</x><y>791</y><w>259</w><h>273</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Request
--
-sumByte: int
-firstByte: int
-lastByte: int
-contentType: String
-messageId: String
-content: byte[]
--
+getSumByte(): MethodType
+setSumByte(sumByte: int): void
+getFirstByte(): String
+setFirstByte(firstByte: int): void
+getLastByte(): int
+setLastByte(lastByte: int): void
+getContentType(): String
+setContentType(contentType: String): void
+getMessageId(): String
+setMessageId(messageId: String): void
+getContent(): byte[]
+setContent(content: byte[]): void
+toString(): String
+compareTo(other: Object): int</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>756</x><y>98</y><w>259</w><h>49</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Response
--
--
+toString(): String
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>707</x><y>455</y><w>336</w><h>315</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
SenderConnection
--
-running: boolean
-msrpStack: MSRPStack
-session: Session
-remoteAddress: InetAddress
-remotePort: int
-remoteSipUri: String
-senderChannel: SocketChannel
-selector: Selector
--
+SenderConnection(remoteAddress: InetAddress, remotePort: int,
                                 remoteSipUri: String, msrpStack: MSRPStack)
+run(): void
#start(): void
#stop(): void
#send(chunk: byte[]): void
#getSession(): Session
#setSession(session: Session): void
#getRemoteSipUri(): String
-isRunning(): boolean
-initSelector(): Selector
-initiateConnection(): SocketChannel
-finishConnection(key: SelectionKey): void
-read(key: SelectionKey): void
-write(key: SelectionKey): void

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>35</x><y>833</y><w>343</w><h>308</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Session
--
-localUri: URI
-remoteUri: URI
-id: String
-senderConnection: SenderConnection
-msrpStack: MSRPStack
-incomingMessageQueue: BlockingQueue&lt;Message&gt;
-outgoingMessageQueue: BlockingQueue&lt;CompleteMSRPMessage&gt;
-transactionManager: TransactionManager
--
+Session(localUri: URI, remoteUri: URI,
               senderConnection: SenderConnection, 
               msrpStack: MSRPStack)
#sendMessage(completeMessage: CompleteMessage): void
#putMessageIntoIncomingMessageQueue(message: Message): void
-putMessageIntoOutgoingMessageQueue(
                                         message: CompleteMSRPMessage
                                         ): void
#getLocalUri(): URI
#getRemoteUri(): URI
#getId(): String
#getSenderConnection(): SenderConnection
#getMsrpStack(): MSRPStack
#stop(): void
+update(o: Observable, obj: Object): void

</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>392</x><y>1050</y><w>210</w><h>140</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
SessionDescription
--
-host: InetAddress
-port: int
-attributes: Map&lt;String, String&gt;
--
+getHost(): InetAddress
+setHost(host: InetAddress): void
+getPort(): int
+setPort(port: int): void
+addAttribute(key: String, value: String): void
+getPathAttribute(): URI</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>616</x><y>1085</y><w>385</w><h>266</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
TransactionManager
--
-requestMap: Map&lt;String, Request&gt;
-session: Session
-incomingMessages: Map&lt;String, Request&gt;
-sender: SenderThread
-outgoingMessageProcessor: OutgoingMessageProcessor
-incomingMessageProcessor: IncomingMessageProcessor
-incomingMessageProcessorStopped: boolean
-outgoingMessageProcessorStopped: boolean
-senderStopped: boolean
--
+TransactionManager(incomingMessageQueue: BlockingQueue&lt;Message&gt;,
             outgoingMessageQueue: BlockingQueue&lt;CompleteMSRPMessage&gt;,
             session: Session)
#stop(): void
#getSession(): Session
+update(o: Observable, obj: Object): void
-isAckedTotalSentMessage(ackedReq: Request): boolean
-incrementNumOfUnacknowledgedChunks(): void
-decrementNumOfUnacknowledgedChunks(): void
-createAcknowledgement(request: Request): Response</panel_attributes><additional_attributes/></element></umlet_diagram>