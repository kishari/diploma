%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 253 575 538
%%Creator: yExport 1.1.0.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, March 12, 2011 12:25:52 AM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
435 222 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
435.000 0.00000 l
435.000 222.000 l
0.00000 222.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 435 222 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -72.0000 -106.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
72.0000 106.000 m
507.000 106.000 l
507.000 328.000 l
72.0000 328.000 l
72.0000 106.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -72.0000 -106.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -72.0000 -106.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -72.0000 -106.000 ] defaultmatrix matrix concatmatrix setmatrix
1.60000 M
10.0000 M
newpath
346.074 148.079 m
344.730 151.704 l
347.418 151.704 l
346.074 148.079 l
h
345.512 147.095 m
346.637 147.095 l
349.418 154.392 l
348.387 154.392 l
347.715 152.517 l
344.434 152.517 l
343.777 154.392 l
342.730 154.392 l
345.512 147.095 l
h
351.306 153.563 m
351.306 156.470 l
350.399 156.470 l
350.399 148.923 l
351.306 148.923 l
351.306 149.751 l
351.493 149.428 351.730 149.188 352.017 149.032  c
352.303 148.876 352.649 148.798 353.056 148.798  c
353.722 148.798 354.261 149.061 354.673 149.587  c
355.084 150.113 355.290 150.803 355.290 151.657  c
355.290 152.522 355.084 153.217 354.673 153.743  c
354.261 154.269 353.722 154.532 353.056 154.532  c
352.649 154.532 352.303 154.454 352.017 154.298  c
351.730 154.142 351.493 153.897 351.306 153.563  c
h
354.368 151.657 m
354.368 151.001 354.230 150.485 353.954 150.110  c
353.678 149.735 353.306 149.548 352.837 149.548  c
352.358 149.548 351.983 149.735 351.712 150.110  c
351.441 150.485 351.306 151.001 351.306 151.657  c
351.306 152.324 351.441 152.845 351.712 153.220  c
351.983 153.595 352.358 153.782 352.837 153.782  c
353.306 153.782 353.678 153.595 353.954 153.220  c
354.230 152.845 354.368 152.324 354.368 151.657  c
h
357.653 153.563 m
357.653 156.470 l
356.747 156.470 l
356.747 148.923 l
357.653 148.923 l
357.653 149.751 l
357.841 149.428 358.078 149.188 358.364 149.032  c
358.651 148.876 358.997 148.798 359.403 148.798  c
360.070 148.798 360.609 149.061 361.021 149.587  c
361.432 150.113 361.638 150.803 361.638 151.657  c
361.638 152.522 361.432 153.217 361.021 153.743  c
360.609 154.269 360.070 154.532 359.403 154.532  c
358.997 154.532 358.651 154.454 358.364 154.298  c
358.078 154.142 357.841 153.897 357.653 153.563  c
h
360.716 151.657 m
360.716 151.001 360.578 150.485 360.302 150.110  c
360.026 149.735 359.653 149.548 359.185 149.548  c
358.705 149.548 358.330 149.735 358.060 150.110  c
357.789 150.485 357.653 151.001 357.653 151.657  c
357.653 152.324 357.789 152.845 358.060 153.220  c
358.330 153.595 358.705 153.782 359.185 153.782  c
359.653 153.782 360.026 153.595 360.302 153.220  c
360.578 152.845 360.716 152.324 360.716 151.657  c
h
363.126 146.798 m
364.032 146.798 l
364.032 154.392 l
363.126 154.392 l
363.126 146.798 l
h
365.904 148.923 m
366.811 148.923 l
366.811 154.392 l
365.904 154.392 l
365.904 148.923 l
h
365.904 146.798 m
366.811 146.798 l
366.811 147.938 l
365.904 147.938 l
365.904 146.798 l
h
372.620 149.126 m
372.620 149.970 l
372.370 149.834 372.118 149.730 371.862 149.657  c
371.607 149.584 371.349 149.548 371.089 149.548  c
370.506 149.548 370.052 149.733 369.729 150.103  c
369.407 150.472 369.245 150.991 369.245 151.657  c
369.245 152.324 369.407 152.842 369.729 153.212  c
370.052 153.582 370.506 153.767 371.089 153.767  c
371.349 153.767 371.607 153.733 371.862 153.665  c
372.118 153.597 372.370 153.491 372.620 153.345  c
372.620 154.188 l
372.370 154.303 372.112 154.389 371.847 154.446  c
371.581 154.504 371.297 154.532 370.995 154.532  c
370.162 154.532 369.503 154.274 369.019 153.759  c
368.534 153.243 368.292 152.543 368.292 151.657  c
368.292 150.772 368.537 150.074 369.026 149.563  c
369.516 149.053 370.188 148.798 371.042 148.798  c
371.323 148.798 371.594 148.824 371.854 148.876  c
372.115 148.928 372.370 149.011 372.620 149.126  c
h
376.665 151.642 m
375.946 151.642 375.446 151.725 375.165 151.892  c
374.884 152.058 374.743 152.340 374.743 152.735  c
374.743 153.058 374.847 153.313 375.056 153.501  c
375.264 153.688 375.550 153.782 375.915 153.782  c
376.415 153.782 376.816 153.605 377.118 153.251  c
377.420 152.897 377.571 152.428 377.571 151.845  c
377.571 151.642 l
376.665 151.642 l
h
378.462 151.267 m
378.462 154.392 l
377.571 154.392 l
377.571 153.563 l
377.363 153.897 377.105 154.142 376.798 154.298  c
376.491 154.454 376.118 154.532 375.681 154.532  c
375.118 154.532 374.670 154.376 374.337 154.063  c
374.004 153.751 373.837 153.329 373.837 152.798  c
373.837 152.183 374.045 151.720 374.462 151.407  c
374.879 151.095 375.493 150.938 376.306 150.938  c
377.571 150.938 l
377.571 150.845 l
377.571 150.438 377.433 150.121 377.157 149.892  c
376.881 149.662 376.498 149.548 376.009 149.548  c
375.696 149.548 375.392 149.587 375.095 149.665  c
374.798 149.743 374.514 149.855 374.243 150.001  c
374.243 149.173 l
374.576 149.048 374.897 148.954 375.204 148.892  c
375.511 148.829 375.811 148.798 376.103 148.798  c
376.894 148.798 377.485 149.001 377.876 149.407  c
378.267 149.813 378.462 150.433 378.462 151.267  c
h
381.199 147.376 m
381.199 148.923 l
383.059 148.923 l
383.059 149.626 l
381.199 149.626 l
381.199 152.595 l
381.199 153.032 381.262 153.316 381.387 153.446  c
381.512 153.576 381.762 153.642 382.137 153.642  c
383.059 153.642 l
383.059 154.392 l
382.137 154.392 l
381.439 154.392 380.957 154.261 380.691 154.001  c
380.426 153.741 380.293 153.272 380.293 152.595  c
380.293 149.626 l
379.637 149.626 l
379.637 148.923 l
380.293 148.923 l
380.293 147.376 l
381.199 147.376 l
h
384.229 148.923 m
385.136 148.923 l
385.136 154.392 l
384.229 154.392 l
384.229 148.923 l
h
384.229 146.798 m
385.136 146.798 l
385.136 147.938 l
384.229 147.938 l
384.229 146.798 l
h
389.133 149.548 m
388.654 149.548 388.273 149.735 387.992 150.110  c
387.711 150.485 387.570 151.001 387.570 151.657  c
387.570 152.313 387.708 152.829 387.984 153.204  c
388.260 153.579 388.643 153.767 389.133 153.767  c
389.612 153.767 389.992 153.579 390.273 153.204  c
390.555 152.829 390.695 152.313 390.695 151.657  c
390.695 151.011 390.555 150.498 390.273 150.118  c
389.992 149.738 389.612 149.548 389.133 149.548  c
h
389.133 148.798 m
389.914 148.798 390.529 149.050 390.977 149.556  c
391.424 150.061 391.648 150.761 391.648 151.657  c
391.648 152.553 391.424 153.256 390.977 153.767  c
390.529 154.277 389.914 154.532 389.133 154.532  c
388.352 154.532 387.737 154.277 387.289 153.767  c
386.841 153.256 386.617 152.553 386.617 151.657  c
386.617 150.761 386.841 150.061 387.289 149.556  c
387.737 149.050 388.352 148.798 389.133 148.798  c
h
397.673 151.095 m
397.673 154.392 l
396.782 154.392 l
396.782 151.126 l
396.782 150.605 396.681 150.217 396.478 149.962  c
396.274 149.707 395.970 149.579 395.563 149.579  c
395.084 149.579 394.704 149.733 394.423 150.040  c
394.142 150.347 394.001 150.767 394.001 151.298  c
394.001 154.392 l
393.095 154.392 l
393.095 148.923 l
394.001 148.923 l
394.001 149.767 l
394.220 149.444 394.475 149.201 394.767 149.040  c
395.058 148.879 395.392 148.798 395.767 148.798  c
396.392 148.798 396.866 148.991 397.188 149.376  c
397.511 149.761 397.673 150.334 397.673 151.095  c
h
f
newpath
357.963 158.985 m
357.963 159.938 l
357.588 159.761 357.234 159.629 356.900 159.540  c
356.567 159.451 356.244 159.407 355.932 159.407  c
355.400 159.407 354.989 159.511 354.697 159.720  c
354.406 159.928 354.260 160.225 354.260 160.610  c
354.260 160.933 354.356 161.178 354.549 161.345  c
354.742 161.511 355.109 161.642 355.650 161.735  c
356.244 161.860 l
356.973 162.006 357.515 162.254 357.869 162.603  c
358.223 162.951 358.400 163.423 358.400 164.017  c
358.400 164.725 358.163 165.261 357.689 165.626  c
357.215 165.991 356.520 166.173 355.604 166.173  c
355.260 166.173 354.893 166.134 354.502 166.056  c
354.111 165.978 353.708 165.860 353.291 165.704  c
353.291 164.688 l
353.697 164.918 354.090 165.090 354.471 165.204  c
354.851 165.319 355.229 165.376 355.604 165.376  c
356.166 165.376 356.601 165.264 356.908 165.040  c
357.215 164.816 357.369 164.501 357.369 164.095  c
357.369 163.741 357.260 163.462 357.041 163.259  c
356.822 163.056 356.458 162.902 355.947 162.798  c
355.354 162.688 l
354.614 162.543 354.080 162.313 353.752 162.001  c
353.424 161.688 353.260 161.251 353.260 160.688  c
353.260 160.043 353.486 159.535 353.939 159.165  c
354.393 158.795 355.020 158.610 355.822 158.610  c
356.166 158.610 356.515 158.642 356.869 158.704  c
357.223 158.767 357.588 158.860 357.963 158.985  c
h
364.576 163.079 m
364.576 163.517 l
360.436 163.517 l
360.477 164.131 360.665 164.600 360.998 164.923  c
361.331 165.246 361.795 165.407 362.389 165.407  c
362.732 165.407 363.068 165.366 363.396 165.282  c
363.725 165.199 364.045 165.074 364.357 164.907  c
364.357 165.751 l
364.035 165.886 363.704 165.991 363.365 166.063  c
363.027 166.136 362.686 166.173 362.342 166.173  c
361.467 166.173 360.774 165.920 360.264 165.415  c
359.753 164.910 359.498 164.220 359.498 163.345  c
359.498 162.449 359.740 161.741 360.225 161.220  c
360.709 160.699 361.363 160.438 362.186 160.438  c
362.925 160.438 363.508 160.673 363.936 161.142  c
364.363 161.610 364.576 162.256 364.576 163.079  c
h
363.670 162.813 m
363.670 162.324 363.535 161.931 363.264 161.634  c
362.993 161.337 362.639 161.188 362.201 161.188  c
361.691 161.188 361.287 161.332 360.990 161.618  c
360.693 161.905 360.519 162.303 360.467 162.813  c
363.670 162.813 l
h
369.213 161.407 m
369.109 161.345 368.999 161.300 368.885 161.274  c
368.770 161.248 368.640 161.235 368.494 161.235  c
367.984 161.235 367.593 161.399 367.322 161.728  c
367.051 162.056 366.916 162.532 366.916 163.157  c
366.916 166.032 l
366.010 166.032 l
366.010 160.563 l
366.916 160.563 l
366.916 161.407 l
367.104 161.074 367.348 160.829 367.650 160.673  c
367.952 160.517 368.322 160.438 368.760 160.438  c
368.822 160.438 368.890 160.441 368.963 160.446  c
369.036 160.451 369.119 160.465 369.213 160.485  c
369.213 161.407 l
h
369.512 160.563 m
370.465 160.563 l
372.168 165.157 l
373.887 160.563 l
374.840 160.563 l
372.777 166.032 l
371.559 166.032 l
369.512 160.563 l
h
380.758 163.079 m
380.758 163.517 l
376.617 163.517 l
376.659 164.131 376.846 164.600 377.180 164.923  c
377.513 165.246 377.977 165.407 378.570 165.407  c
378.914 165.407 379.250 165.366 379.578 165.282  c
379.906 165.199 380.227 165.074 380.539 164.907  c
380.539 165.751 l
380.216 165.886 379.885 165.991 379.547 166.063  c
379.208 166.136 378.867 166.173 378.523 166.173  c
377.648 166.173 376.956 165.920 376.445 165.415  c
375.935 164.910 375.680 164.220 375.680 163.345  c
375.680 162.449 375.922 161.741 376.406 161.220  c
376.891 160.699 377.544 160.438 378.367 160.438  c
379.107 160.438 379.690 160.673 380.117 161.142  c
380.544 161.610 380.758 162.256 380.758 163.079  c
h
379.852 162.813 m
379.852 162.324 379.716 161.931 379.445 161.634  c
379.174 161.337 378.820 161.188 378.383 161.188  c
377.872 161.188 377.469 161.332 377.172 161.618  c
376.875 161.905 376.701 162.303 376.648 162.813  c
379.852 162.813 l
h
385.395 161.407 m
385.290 161.345 385.181 161.300 385.066 161.274  c
384.952 161.248 384.822 161.235 384.676 161.235  c
384.165 161.235 383.775 161.399 383.504 161.728  c
383.233 162.056 383.098 162.532 383.098 163.157  c
383.098 166.032 l
382.191 166.032 l
382.191 160.563 l
383.098 160.563 l
383.098 161.407 l
383.285 161.074 383.530 160.829 383.832 160.673  c
384.134 160.517 384.504 160.438 384.941 160.438  c
385.004 160.438 385.072 160.441 385.145 160.446  c
385.217 160.451 385.301 160.465 385.395 160.485  c
385.395 161.407 l
h
f
0 J
1.45000 M
newpath
334.000 125.750 m
334.000 187.750 l
334.000 189.959 335.791 191.750 338.000 191.750  c
400.000 191.750 l
402.209 191.750 404.000 189.959 404.000 187.750  c
404.000 125.750 l
404.000 123.541 402.209 121.750 400.000 121.750  c
338.000 121.750 l
335.791 121.750 334.000 123.541 334.000 125.750  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
356.349 273.665 m
356.349 274.618 l
355.974 274.441 355.620 274.308 355.287 274.220  c
354.953 274.131 354.630 274.087 354.318 274.087  c
353.787 274.087 353.375 274.191 353.083 274.399  c
352.792 274.608 352.646 274.905 352.646 275.290  c
352.646 275.613 352.742 275.858 352.935 276.024  c
353.128 276.191 353.495 276.321 354.037 276.415  c
354.630 276.540 l
355.360 276.686 355.901 276.933 356.255 277.282  c
356.610 277.631 356.787 278.103 356.787 278.696  c
356.787 279.405 356.550 279.941 356.076 280.306  c
355.602 280.670 354.906 280.853 353.990 280.853  c
353.646 280.853 353.279 280.813 352.888 280.735  c
352.498 280.657 352.094 280.540 351.677 280.384  c
351.677 279.368 l
352.083 279.597 352.477 279.769 352.857 279.884  c
353.237 279.998 353.615 280.056 353.990 280.056  c
354.552 280.056 354.987 279.944 355.294 279.720  c
355.602 279.496 355.755 279.181 355.755 278.774  c
355.755 278.420 355.646 278.142 355.427 277.938  c
355.208 277.735 354.844 277.582 354.333 277.478  c
353.740 277.368 l
353.000 277.222 352.466 276.993 352.138 276.681  c
351.810 276.368 351.646 275.931 351.646 275.368  c
351.646 274.722 351.873 274.215 352.326 273.845  c
352.779 273.475 353.406 273.290 354.208 273.290  c
354.552 273.290 354.901 273.321 355.255 273.384  c
355.610 273.446 355.974 273.540 356.349 273.665  c
h
357.822 277.571 m
360.462 277.571 l
360.462 278.368 l
357.822 278.368 l
357.822 277.571 l
h
367.383 273.978 m
367.383 275.024 l
367.050 274.712 366.696 274.480 366.321 274.329  c
365.946 274.178 365.550 274.103 365.133 274.103  c
364.300 274.103 363.662 274.358 363.219 274.868  c
362.777 275.379 362.555 276.113 362.555 277.071  c
362.555 278.030 362.777 278.764 363.219 279.274  c
363.662 279.785 364.300 280.040 365.133 280.040  c
365.550 280.040 365.946 279.965 366.321 279.813  c
366.696 279.662 367.050 279.431 367.383 279.118  c
367.383 280.149 l
367.040 280.389 366.675 280.566 366.290 280.681  c
365.904 280.795 365.498 280.853 365.071 280.853  c
363.967 280.853 363.097 280.514 362.461 279.837  c
361.826 279.160 361.508 278.238 361.508 277.071  c
361.508 275.905 361.826 274.983 362.461 274.306  c
363.097 273.629 363.967 273.290 365.071 273.290  c
365.508 273.290 365.920 273.347 366.305 273.462  c
366.691 273.576 367.050 273.748 367.383 273.978  c
h
373.288 273.665 m
373.288 274.618 l
372.913 274.441 372.558 274.308 372.225 274.220  c
371.892 274.131 371.569 274.087 371.256 274.087  c
370.725 274.087 370.314 274.191 370.022 274.399  c
369.730 274.608 369.584 274.905 369.584 275.290  c
369.584 275.613 369.681 275.858 369.874 276.024  c
370.066 276.191 370.433 276.321 370.975 276.415  c
371.569 276.540 l
372.298 276.686 372.840 276.933 373.194 277.282  c
373.548 277.631 373.725 278.103 373.725 278.696  c
373.725 279.405 373.488 279.941 373.014 280.306  c
372.540 280.670 371.845 280.853 370.928 280.853  c
370.584 280.853 370.217 280.813 369.827 280.735  c
369.436 280.657 369.032 280.540 368.616 280.384  c
368.616 279.368 l
369.022 279.597 369.415 279.769 369.795 279.884  c
370.176 279.998 370.553 280.056 370.928 280.056  c
371.491 280.056 371.926 279.944 372.233 279.720  c
372.540 279.496 372.694 279.181 372.694 278.774  c
372.694 278.420 372.584 278.142 372.366 277.938  c
372.147 277.735 371.782 277.582 371.272 277.478  c
370.678 277.368 l
369.939 277.222 369.405 276.993 369.077 276.681  c
368.749 276.368 368.584 275.931 368.584 275.368  c
368.584 274.722 368.811 274.215 369.264 273.845  c
369.717 273.475 370.345 273.290 371.147 273.290  c
371.491 273.290 371.840 273.321 372.194 273.384  c
372.548 273.446 372.913 273.540 373.288 273.665  c
h
380.713 273.978 m
380.713 275.024 l
380.380 274.712 380.026 274.480 379.651 274.329  c
379.276 274.178 378.880 274.103 378.463 274.103  c
377.630 274.103 376.992 274.358 376.549 274.868  c
376.107 275.379 375.885 276.113 375.885 277.071  c
375.885 278.030 376.107 278.764 376.549 279.274  c
376.992 279.785 377.630 280.040 378.463 280.040  c
378.880 280.040 379.276 279.965 379.651 279.813  c
380.026 279.662 380.380 279.431 380.713 279.118  c
380.713 280.149 l
380.370 280.389 380.005 280.566 379.620 280.681  c
379.234 280.795 378.828 280.853 378.401 280.853  c
377.297 280.853 376.427 280.514 375.792 279.837  c
375.156 279.160 374.838 278.238 374.838 277.071  c
374.838 275.905 375.156 274.983 375.792 274.306  c
376.427 273.629 377.297 273.290 378.401 273.290  c
378.838 273.290 379.250 273.347 379.635 273.462  c
380.021 273.576 380.380 273.748 380.713 273.978  c
h
382.243 273.415 m
386.430 273.415 l
386.430 274.259 l
383.227 274.259 l
383.227 276.399 l
386.118 276.399 l
386.118 277.228 l
383.227 277.228 l
383.227 280.712 l
382.243 280.712 l
382.243 273.415 l
h
f
0 J
1.45000 M
newpath
334.000 246.250 m
334.000 308.250 l
334.000 310.459 335.791 312.250 338.000 312.250  c
400.000 312.250 l
402.209 312.250 404.000 310.459 404.000 308.250  c
404.000 246.250 l
404.000 244.041 402.209 242.250 400.000 242.250  c
338.000 242.250 l
335.791 242.250 334.000 244.041 334.000 246.250  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
206.222 274.228 m
206.222 276.978 l
207.457 276.978 l
207.915 276.978 208.272 276.858 208.527 276.618  c
208.782 276.379 208.910 276.040 208.910 275.603  c
208.910 275.165 208.782 274.826 208.527 274.587  c
208.272 274.347 207.915 274.228 207.457 274.228  c
206.222 274.228 l
h
205.238 273.415 m
207.457 273.415 l
208.279 273.415 208.899 273.600 209.316 273.970  c
209.733 274.340 209.941 274.884 209.941 275.603  c
209.941 276.321 209.733 276.863 209.316 277.228  c
208.899 277.592 208.279 277.774 207.457 277.774  c
206.222 277.774 l
206.222 280.712 l
205.238 280.712 l
205.238 273.415 l
h
210.768 277.571 m
213.409 277.571 l
213.409 278.368 l
210.768 278.368 l
210.768 277.571 l
h
220.330 273.978 m
220.330 275.024 l
219.996 274.712 219.642 274.480 219.267 274.329  c
218.892 274.178 218.496 274.103 218.080 274.103  c
217.246 274.103 216.608 274.358 216.166 274.868  c
215.723 275.379 215.501 276.113 215.501 277.071  c
215.501 278.030 215.723 278.764 216.166 279.274  c
216.608 279.785 217.246 280.040 218.080 280.040  c
218.496 280.040 218.892 279.965 219.267 279.813  c
219.642 279.662 219.996 279.431 220.330 279.118  c
220.330 280.149 l
219.986 280.389 219.621 280.566 219.236 280.681  c
218.850 280.795 218.444 280.853 218.017 280.853  c
216.913 280.853 216.043 280.514 215.408 279.837  c
214.772 279.160 214.455 278.238 214.455 277.071  c
214.455 275.905 214.772 274.983 215.408 274.306  c
216.043 273.629 216.913 273.290 218.017 273.290  c
218.455 273.290 218.866 273.347 219.251 273.462  c
219.637 273.576 219.996 273.748 220.330 273.978  c
h
226.234 273.665 m
226.234 274.618 l
225.859 274.441 225.505 274.308 225.171 274.220  c
224.838 274.131 224.515 274.087 224.203 274.087  c
223.671 274.087 223.260 274.191 222.968 274.399  c
222.677 274.608 222.531 274.905 222.531 275.290  c
222.531 275.613 222.627 275.858 222.820 276.024  c
223.013 276.191 223.380 276.321 223.921 276.415  c
224.515 276.540 l
225.244 276.686 225.786 276.933 226.140 277.282  c
226.494 277.631 226.671 278.103 226.671 278.696  c
226.671 279.405 226.434 279.941 225.960 280.306  c
225.487 280.670 224.791 280.853 223.875 280.853  c
223.531 280.853 223.164 280.813 222.773 280.735  c
222.382 280.657 221.979 280.540 221.562 280.384  c
221.562 279.368 l
221.968 279.597 222.362 279.769 222.742 279.884  c
223.122 279.998 223.500 280.056 223.875 280.056  c
224.437 280.056 224.872 279.944 225.179 279.720  c
225.487 279.496 225.640 279.181 225.640 278.774  c
225.640 278.420 225.531 278.142 225.312 277.938  c
225.093 277.735 224.729 277.582 224.218 277.478  c
223.625 277.368 l
222.885 277.222 222.351 276.993 222.023 276.681  c
221.695 276.368 221.531 275.931 221.531 275.368  c
221.531 274.722 221.757 274.215 222.210 273.845  c
222.664 273.475 223.291 273.290 224.093 273.290  c
224.437 273.290 224.786 273.321 225.140 273.384  c
225.494 273.446 225.859 273.540 226.234 273.665  c
h
233.660 273.978 m
233.660 275.024 l
233.326 274.712 232.972 274.480 232.597 274.329  c
232.222 274.178 231.826 274.103 231.410 274.103  c
230.576 274.103 229.938 274.358 229.496 274.868  c
229.053 275.379 228.832 276.113 228.832 277.071  c
228.832 278.030 229.053 278.764 229.496 279.274  c
229.938 279.785 230.576 280.040 231.410 280.040  c
231.826 280.040 232.222 279.965 232.597 279.813  c
232.972 279.662 233.326 279.431 233.660 279.118  c
233.660 280.149 l
233.316 280.389 232.951 280.566 232.566 280.681  c
232.181 280.795 231.774 280.853 231.347 280.853  c
230.243 280.853 229.373 280.514 228.738 279.837  c
228.102 279.160 227.785 278.238 227.785 277.071  c
227.785 275.905 228.102 274.983 228.738 274.306  c
229.373 273.629 230.243 273.290 231.347 273.290  c
231.785 273.290 232.196 273.347 232.582 273.462  c
232.967 273.576 233.326 273.748 233.660 273.978  c
h
235.189 273.415 m
239.376 273.415 l
239.376 274.259 l
236.173 274.259 l
236.173 276.399 l
239.064 276.399 l
239.064 277.228 l
236.173 277.228 l
236.173 280.712 l
235.189 280.712 l
235.189 273.415 l
h
f
0 J
1.45000 M
newpath
187.105 246.250 m
187.105 308.250 l
187.105 310.459 188.896 312.250 191.105 312.250  c
253.105 312.250 l
255.314 312.250 257.105 310.459 257.105 308.250  c
257.105 246.250 l
257.105 244.041 255.314 242.250 253.105 242.250  c
191.105 242.250 l
188.896 242.250 187.105 244.041 187.105 246.250  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
464.127 273.415 m
465.111 273.415 l
465.111 276.415 l
468.689 276.415 l
468.689 273.415 l
469.674 273.415 l
469.674 280.712 l
468.689 280.712 l
468.689 277.243 l
465.111 277.243 l
465.111 280.712 l
464.127 280.712 l
464.127 273.415 l
h
476.021 273.665 m
476.021 274.618 l
475.646 274.441 475.292 274.308 474.959 274.220  c
474.626 274.131 474.303 274.087 473.990 274.087  c
473.459 274.087 473.048 274.191 472.756 274.399  c
472.464 274.608 472.318 274.905 472.318 275.290  c
472.318 275.613 472.415 275.858 472.607 276.024  c
472.800 276.191 473.167 276.321 473.709 276.415  c
474.303 276.540 l
475.032 276.686 475.574 276.933 475.928 277.282  c
476.282 277.631 476.459 278.103 476.459 278.696  c
476.459 279.405 476.222 279.941 475.748 280.306  c
475.274 280.670 474.579 280.853 473.662 280.853  c
473.318 280.853 472.951 280.813 472.561 280.735  c
472.170 280.657 471.766 280.540 471.350 280.384  c
471.350 279.368 l
471.756 279.597 472.149 279.769 472.529 279.884  c
472.910 279.998 473.287 280.056 473.662 280.056  c
474.225 280.056 474.660 279.944 474.967 279.720  c
475.274 279.496 475.428 279.181 475.428 278.774  c
475.428 278.420 475.318 278.142 475.100 277.938  c
474.881 277.735 474.516 277.582 474.006 277.478  c
473.412 277.368 l
472.673 277.222 472.139 276.993 471.811 276.681  c
471.482 276.368 471.318 275.931 471.318 275.368  c
471.318 274.722 471.545 274.215 471.998 273.845  c
472.451 273.475 473.079 273.290 473.881 273.290  c
474.225 273.290 474.574 273.321 474.928 273.384  c
475.282 273.446 475.646 273.540 476.021 273.665  c
h
482.369 273.665 m
482.369 274.618 l
481.994 274.441 481.640 274.308 481.307 274.220  c
480.973 274.131 480.650 274.087 480.338 274.087  c
479.807 274.087 479.395 274.191 479.104 274.399  c
478.812 274.608 478.666 274.905 478.666 275.290  c
478.666 275.613 478.762 275.858 478.955 276.024  c
479.148 276.191 479.515 276.321 480.057 276.415  c
480.650 276.540 l
481.380 276.686 481.921 276.933 482.275 277.282  c
482.630 277.631 482.807 278.103 482.807 278.696  c
482.807 279.405 482.570 279.941 482.096 280.306  c
481.622 280.670 480.926 280.853 480.010 280.853  c
479.666 280.853 479.299 280.813 478.908 280.735  c
478.518 280.657 478.114 280.540 477.697 280.384  c
477.697 279.368 l
478.104 279.597 478.497 279.769 478.877 279.884  c
479.257 279.998 479.635 280.056 480.010 280.056  c
480.572 280.056 481.007 279.944 481.314 279.720  c
481.622 279.496 481.775 279.181 481.775 278.774  c
481.775 278.420 481.666 278.142 481.447 277.938  c
481.229 277.735 480.864 277.582 480.354 277.478  c
479.760 277.368 l
479.020 277.222 478.486 276.993 478.158 276.681  c
477.830 276.368 477.666 275.931 477.666 275.368  c
477.666 274.722 477.893 274.215 478.346 273.845  c
478.799 273.475 479.426 273.290 480.229 273.290  c
480.572 273.290 480.921 273.321 481.275 273.384  c
481.630 273.446 481.994 273.540 482.369 273.665  c
h
f
0 J
1.45000 M
newpath
454.500 254.250 m
454.500 300.250 l
454.500 302.459 456.291 304.250 458.500 304.250  c
488.000 304.250 l
490.209 304.250 492.000 302.459 492.000 300.250  c
492.000 254.250 l
492.000 252.041 490.209 250.250 488.000 250.250  c
458.500 250.250 l
456.291 250.250 454.500 252.041 454.500 254.250  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
467.938 153.728 m
467.938 159.399 l
469.126 159.399 l
470.136 159.399 470.873 159.173 471.337 158.720  c
471.800 158.267 472.032 157.545 472.032 156.556  c
472.032 155.576 471.800 154.860 471.337 154.407  c
470.873 153.954 470.136 153.728 469.126 153.728  c
467.938 153.728 l
h
466.954 152.915 m
468.985 152.915 l
470.392 152.915 471.425 153.209 472.087 153.798  c
472.748 154.386 473.079 155.306 473.079 156.556  c
473.079 157.816 472.748 158.741 472.087 159.329  c
471.425 159.918 470.392 160.212 468.985 160.212  c
466.954 160.212 l
466.954 152.915 l
h
475.639 156.728 m
475.639 159.399 l
477.217 159.399 l
477.748 159.399 478.141 159.290 478.396 159.071  c
478.652 158.853 478.779 158.514 478.779 158.056  c
478.779 157.608 478.652 157.274 478.396 157.056  c
478.141 156.837 477.748 156.728 477.217 156.728  c
475.639 156.728 l
h
475.639 153.728 m
475.639 155.931 l
477.092 155.931 l
477.581 155.931 477.943 155.840 478.178 155.657  c
478.412 155.475 478.529 155.201 478.529 154.837  c
478.529 154.462 478.412 154.183 478.178 154.001  c
477.943 153.819 477.581 153.728 477.092 153.728  c
475.639 153.728 l
h
474.654 152.915 m
477.170 152.915 l
477.920 152.915 478.498 153.071 478.904 153.384  c
479.311 153.696 479.514 154.144 479.514 154.728  c
479.514 155.175 479.410 155.530 479.201 155.790  c
478.993 156.050 478.691 156.212 478.295 156.274  c
478.774 156.379 479.149 156.597 479.420 156.931  c
479.691 157.264 479.826 157.675 479.826 158.165  c
479.826 158.821 479.605 159.326 479.162 159.681  c
478.719 160.035 478.087 160.212 477.264 160.212  c
474.654 160.212 l
474.654 152.915 l
h
f
0 J
1.45000 M
newpath
454.500 151.750 m
454.500 161.750 l
454.500 163.959 456.291 165.750 458.500 165.750  c
488.000 165.750 l
490.209 165.750 492.000 163.959 492.000 161.750  c
492.000 151.750 l
492.000 149.541 490.209 147.750 488.000 147.750  c
458.500 147.750 l
456.291 147.750 454.500 149.541 454.500 151.750  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
0 J
1.45000 M
newpath
454.500 169.750 m
454.500 179.750 l
454.500 181.959 456.291 183.750 458.500 183.750  c
488.000 183.750 l
490.209 183.750 492.000 181.959 492.000 179.750  c
492.000 169.750 l
492.000 167.541 490.209 165.750 488.000 165.750  c
458.500 165.750 l
456.291 165.750 454.500 167.541 454.500 169.750  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
0 J
1.45000 M
newpath
454.500 133.750 m
454.500 143.750 l
454.500 145.959 456.291 147.750 458.500 147.750  c
488.000 147.750 l
490.209 147.750 492.000 145.959 492.000 143.750  c
492.000 133.750 l
492.000 131.541 490.209 129.750 488.000 129.750  c
458.500 129.750 l
456.291 129.750 454.500 131.541 454.500 133.750  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
104.686 153.478 m
104.686 154.524 l
104.353 154.212 103.999 153.980 103.624 153.829  c
103.249 153.678 102.853 153.603 102.436 153.603  c
101.603 153.603 100.965 153.858 100.522 154.368  c
100.079 154.879 99.8579 155.613 99.8579 156.571  c
99.8579 157.530 100.079 158.264 100.522 158.774  c
100.965 159.285 101.603 159.540 102.436 159.540  c
102.853 159.540 103.249 159.465 103.624 159.313  c
103.999 159.162 104.353 158.931 104.686 158.618  c
104.686 159.649 l
104.342 159.889 103.978 160.066 103.592 160.181  c
103.207 160.295 102.801 160.353 102.374 160.353  c
101.269 160.353 100.400 160.014 99.7642 159.337  c
99.1288 158.660 98.8111 157.738 98.8111 156.571  c
98.8111 155.405 99.1288 154.483 99.7642 153.806  c
100.400 153.129 101.269 152.790 102.374 152.790  c
102.811 152.790 103.223 152.847 103.608 152.962  c
103.993 153.076 104.353 153.248 104.686 153.478  c
h
106.168 152.618 m
107.075 152.618 l
107.075 160.212 l
106.168 160.212 l
106.168 152.618 l
h
108.947 154.743 m
109.853 154.743 l
109.853 160.212 l
108.947 160.212 l
108.947 154.743 l
h
108.947 152.618 m
109.853 152.618 l
109.853 153.759 l
108.947 153.759 l
108.947 152.618 l
h
116.413 157.259 m
116.413 157.696 l
112.272 157.696 l
112.314 158.311 112.501 158.780 112.834 159.103  c
113.168 159.425 113.631 159.587 114.225 159.587  c
114.569 159.587 114.905 159.545 115.233 159.462  c
115.561 159.379 115.881 159.254 116.194 159.087  c
116.194 159.931 l
115.871 160.066 115.540 160.170 115.202 160.243  c
114.863 160.316 114.522 160.353 114.178 160.353  c
113.303 160.353 112.611 160.100 112.100 159.595  c
111.590 159.090 111.334 158.399 111.334 157.524  c
111.334 156.629 111.577 155.920 112.061 155.399  c
112.545 154.879 113.199 154.618 114.022 154.618  c
114.762 154.618 115.345 154.853 115.772 155.321  c
116.199 155.790 116.413 156.436 116.413 157.259  c
h
115.506 156.993 m
115.506 156.504 115.371 156.110 115.100 155.813  c
114.829 155.517 114.475 155.368 114.038 155.368  c
113.527 155.368 113.124 155.511 112.827 155.798  c
112.530 156.084 112.355 156.483 112.303 156.993  c
115.506 156.993 l
h
122.424 156.915 m
122.424 160.212 l
121.534 160.212 l
121.534 156.946 l
121.534 156.425 121.432 156.037 121.229 155.782  c
121.026 155.527 120.721 155.399 120.315 155.399  c
119.836 155.399 119.456 155.553 119.174 155.860  c
118.893 156.168 118.752 156.587 118.752 157.118  c
118.752 160.212 l
117.846 160.212 l
117.846 154.743 l
118.752 154.743 l
118.752 155.587 l
118.971 155.264 119.226 155.022 119.518 154.860  c
119.810 154.699 120.143 154.618 120.518 154.618  c
121.143 154.618 121.617 154.811 121.940 155.196  c
122.263 155.582 122.424 156.155 122.424 156.915  c
h
125.106 153.196 m
125.106 154.743 l
126.965 154.743 l
126.965 155.446 l
125.106 155.446 l
125.106 158.415 l
125.106 158.853 125.168 159.136 125.293 159.267  c
125.418 159.397 125.668 159.462 126.043 159.462  c
126.965 159.462 l
126.965 160.212 l
126.043 160.212 l
125.346 160.212 124.864 160.082 124.598 159.821  c
124.333 159.561 124.200 159.092 124.200 158.415  c
124.200 155.446 l
123.543 155.446 l
123.543 154.743 l
124.200 154.743 l
124.200 153.196 l
125.106 153.196 l
h
132.346 153.728 m
132.346 156.478 l
133.581 156.478 l
134.039 156.478 134.396 156.358 134.651 156.118  c
134.906 155.879 135.034 155.540 135.034 155.103  c
135.034 154.665 134.906 154.326 134.651 154.087  c
134.396 153.847 134.039 153.728 133.581 153.728  c
132.346 153.728 l
h
131.362 152.915 m
133.581 152.915 l
134.404 152.915 135.023 153.100 135.440 153.470  c
135.857 153.840 136.065 154.384 136.065 155.103  c
136.065 155.821 135.857 156.363 135.440 156.728  c
135.023 157.092 134.404 157.274 133.581 157.274  c
132.346 157.274 l
132.346 160.212 l
131.362 160.212 l
131.362 152.915 l
h
142.845 153.478 m
142.845 154.524 l
142.512 154.212 142.158 153.980 141.783 153.829  c
141.408 153.678 141.012 153.603 140.595 153.603  c
139.762 153.603 139.124 153.858 138.681 154.368  c
138.238 154.879 138.017 155.613 138.017 156.571  c
138.017 157.530 138.238 158.264 138.681 158.774  c
139.124 159.285 139.762 159.540 140.595 159.540  c
141.012 159.540 141.408 159.465 141.783 159.313  c
142.158 159.162 142.512 158.931 142.845 158.618  c
142.845 159.649 l
142.501 159.889 142.137 160.066 141.751 160.181  c
141.366 160.295 140.960 160.353 140.533 160.353  c
139.429 160.353 138.559 160.014 137.923 159.337  c
137.288 158.660 136.970 157.738 136.970 156.571  c
136.970 155.405 137.288 154.483 137.923 153.806  c
138.559 153.129 139.429 152.790 140.533 152.790  c
140.970 152.790 141.382 152.847 141.767 152.962  c
142.153 153.076 142.512 153.248 142.845 153.478  c
h
f
0 J
1.45000 M
newpath
87.3550 129.250 m
87.3550 184.250 l
87.3550 186.459 89.1459 188.250 91.3550 188.250  c
147.105 188.250 l
149.314 188.250 151.105 186.459 151.105 184.250  c
151.105 129.250 l
151.105 127.041 149.314 125.250 147.105 125.250  c
91.3550 125.250 l
89.1459 125.250 87.3550 127.041 87.3550 129.250  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
369.000 242.271 m
369.000 191.785 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
257.071 277.250 m
333.995 277.250 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
403.996 277.250 m
454.482 277.250 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
403.996 156.750 m
454.482 156.750 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
146.129 188.258 m
192.223 242.248 l
S
2 J
1.60000 M
0 J
1.45000 M
newpath
185.209 211.665 m
185.209 212.618 l
184.834 212.441 184.480 212.308 184.147 212.220  c
183.813 212.131 183.491 212.087 183.178 212.087  c
182.647 212.087 182.235 212.191 181.944 212.399  c
181.652 212.608 181.506 212.905 181.506 213.290  c
181.506 213.613 181.603 213.858 181.795 214.024  c
181.988 214.191 182.355 214.321 182.897 214.415  c
183.491 214.540 l
184.220 214.686 184.761 214.933 185.116 215.282  c
185.470 215.631 185.647 216.103 185.647 216.696  c
185.647 217.405 185.410 217.941 184.936 218.306  c
184.462 218.670 183.767 218.853 182.850 218.853  c
182.506 218.853 182.139 218.813 181.748 218.735  c
181.358 218.657 180.954 218.540 180.537 218.384  c
180.537 217.368 l
180.944 217.597 181.337 217.769 181.717 217.884  c
182.097 217.998 182.475 218.056 182.850 218.056  c
183.412 218.056 183.847 217.944 184.155 217.720  c
184.462 217.496 184.616 217.181 184.616 216.774  c
184.616 216.420 184.506 216.142 184.287 215.938  c
184.069 215.735 183.704 215.582 183.194 215.478  c
182.600 215.368 l
181.860 215.222 181.326 214.993 180.998 214.681  c
180.670 214.368 180.506 213.931 180.506 213.368  c
180.506 212.722 180.733 212.215 181.186 211.845  c
181.639 211.475 182.267 211.290 183.069 211.290  c
183.412 211.290 183.761 211.321 184.116 211.384  c
184.470 211.446 184.834 211.540 185.209 211.665  c
h
187.182 211.415 m
188.166 211.415 l
188.166 218.712 l
187.182 218.712 l
187.182 211.415 l
h
191.116 212.228 m
191.116 214.978 l
192.350 214.978 l
192.808 214.978 193.165 214.858 193.420 214.618  c
193.675 214.379 193.803 214.040 193.803 213.603  c
193.803 213.165 193.675 212.826 193.420 212.587  c
193.165 212.347 192.808 212.228 192.350 212.228  c
191.116 212.228 l
h
190.131 211.415 m
192.350 211.415 l
193.173 211.415 193.793 211.600 194.209 211.970  c
194.626 212.340 194.834 212.884 194.834 213.603  c
194.834 214.321 194.626 214.863 194.209 215.228  c
193.793 215.592 193.173 215.774 192.350 215.774  c
191.116 215.774 l
191.116 218.712 l
190.131 218.712 l
190.131 211.415 l
h
f
2 J
10.0000 M
1 J
1.45000 M
[ 0.00000 4.00000 ] 2.00000 d
newpath
151.092 156.750 m
334.021 156.750 l
S
2 J
1.60000 M
[ ] 0.00000 d
1 J
1.45000 M
[ 0.00000 4.00000 ] 2.00000 d
newpath
229.560 143.095 m
231.029 143.095 l
232.888 148.063 l
234.763 143.095 l
236.232 143.095 l
236.232 150.392 l
235.263 150.392 l
235.263 143.985 l
233.388 148.985 l
232.388 148.985 l
230.513 143.985 l
230.513 150.392 l
229.560 150.392 l
229.560 143.095 l
h
242.563 143.345 m
242.563 144.298 l
242.188 144.121 241.834 143.988 241.500 143.899  c
241.167 143.811 240.844 143.767 240.532 143.767  c
240.000 143.767 239.589 143.871 239.297 144.079  c
239.005 144.287 238.860 144.584 238.860 144.970  c
238.860 145.293 238.956 145.537 239.149 145.704  c
239.341 145.871 239.709 146.001 240.250 146.095  c
240.844 146.220 l
241.573 146.366 242.115 146.613 242.469 146.962  c
242.823 147.311 243.000 147.782 243.000 148.376  c
243.000 149.084 242.763 149.621 242.289 149.985  c
241.815 150.350 241.120 150.532 240.203 150.532  c
239.860 150.532 239.492 150.493 239.102 150.415  c
238.711 150.337 238.308 150.220 237.891 150.063  c
237.891 149.048 l
238.297 149.277 238.690 149.449 239.071 149.563  c
239.451 149.678 239.828 149.735 240.203 149.735  c
240.766 149.735 241.201 149.623 241.508 149.399  c
241.815 149.175 241.969 148.860 241.969 148.454  c
241.969 148.100 241.860 147.821 241.641 147.618  c
241.422 147.415 241.058 147.261 240.547 147.157  c
239.953 147.048 l
239.214 146.902 238.680 146.673 238.352 146.360  c
238.024 146.048 237.860 145.610 237.860 145.048  c
237.860 144.402 238.086 143.894 238.539 143.524  c
238.992 143.155 239.620 142.970 240.422 142.970  c
240.766 142.970 241.115 143.001 241.469 143.063  c
241.823 143.126 242.188 143.220 242.563 143.345  c
h
247.989 146.970 m
248.197 147.043 248.403 147.196 248.606 147.431  c
248.809 147.665 249.009 147.985 249.207 148.392  c
250.207 150.392 l
249.145 150.392 l
248.223 148.517 l
247.983 148.027 247.749 147.704 247.520 147.548  c
247.291 147.392 246.983 147.313 246.598 147.313  c
245.520 147.313 l
245.520 150.392 l
244.535 150.392 l
244.535 143.095 l
246.754 143.095 l
247.587 143.095 248.210 143.269 248.621 143.618  c
249.033 143.967 249.239 144.496 249.239 145.204  c
249.239 145.662 249.132 146.043 248.918 146.345  c
248.705 146.647 248.395 146.855 247.989 146.970  c
h
245.520 143.907 m
245.520 146.501 l
246.754 146.501 l
247.233 146.501 247.595 146.392 247.840 146.173  c
248.085 145.954 248.207 145.631 248.207 145.204  c
248.207 144.777 248.085 144.454 247.840 144.235  c
247.595 144.017 247.233 143.907 246.754 143.907  c
245.520 143.907 l
h
252.468 143.907 m
252.468 146.657 l
253.702 146.657 l
254.161 146.657 254.518 146.537 254.773 146.298  c
255.028 146.058 255.156 145.720 255.156 145.282  c
255.156 144.845 255.028 144.506 254.773 144.267  c
254.518 144.027 254.161 143.907 253.702 143.907  c
252.468 143.907 l
h
251.484 143.095 m
253.702 143.095 l
254.525 143.095 255.145 143.280 255.562 143.649  c
255.978 144.019 256.187 144.563 256.187 145.282  c
256.187 146.001 255.978 146.543 255.562 146.907  c
255.145 147.272 254.525 147.454 253.702 147.454  c
252.468 147.454 l
252.468 150.392 l
251.484 150.392 l
251.484 143.095 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
